# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-ingress-controller
#   namespace: nginx-ingress
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       name: nginx-ingress
#   template:
#     metadata:
#       labels:
#         name: nginx-ingress
#     spec:
#       serviceAccountName: nginx-ingress
#       automountServiceAccountToken: true
#       containers:
#       - image: k8s.gcr.io/ingress-nginx/controller:v1.1.2@sha256:28b11ce69e57843de44e3db6413e98d09de0f6688e33d4bd384002a44f78405c
#         imagePullPolicy: IfNotPresent
#         name: nginx-ingress-controller
#         ports:
#         - name: http
#           containerPort: 8080
#           protocol: TCP
#         - name: https
#           containerPort: 443
#           protocol: TCP
#         env:
#         - name: POD_NAME
#           valueFrom:
#             fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.name
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.namespace
#         - name: LD_PRELOAD
#           value: /usr/local/lib/libmimalloc.so
#         securityContext:
#           allowPrivilegeEscalation: true
#           capabilities:
#             add:
#             - NET_BIND_SERVICE
#             drop:
#             - ALL
#           runAsUser: 101
#         args:
#           - /nginx-ingress-controller
#           - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
#           - --election-id=ingress-controller-leader
#           - --watch-ingress-without-class=true
#           - --default-backend-service=app-space/default-backend-service
#           - --controller-class=k8s.io/ingress-nginx
#           - --ingress-class=nginx
#           - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
#           - --validating-webhook=:8443
#           - --validating-webhook-certificate=/usr/local/certificates/cert
#           - --validating-webhook-key=/usr/local/certificates/key
  